events {
    worker_connections  1024;
    multi_accept on;
}

http {
    #include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;
    access_log off;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay    on;

    # Timeout for keep-alive connections. Server will close connections after this time.
    keepalive_timeout  30;

    # Number of requests a client can make over the keep-alive connection. This is set high for testing.
    keepalive_requests 100000;

    # allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
    reset_timedout_connection on;

    # send the client a "request timed out" if the body is not loaded by this time. Default 60.
    client_body_timeout 10;
    client_header_timeout 10;

    # If the client stops reading data, free up the stale client connection after this much time. Default 60.
    send_timeout 2;

    gzip  on;
    gzip_static on;
    gzip_http_version	1.1;
    gzip_comp_level	5;
    gzip_min_length	256;
    gzip_buffers 4 32k;
    gzip_proxied	any;
    gzip_vary	on;
    gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/rss+xml
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/svg+xml
      image/x-icon
      text/css
      text/plain
      text/x-component;

    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 4 16k;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    #include /etc/nginx/conf.d/*.conf;
    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        #server_name jenkins.domain.com;
        ssl_certificate %PWD%/conf/nginx/cert.crt;
        ssl_certificate_key %PWD%/conf/nginx/cert.key;
        ssl_session_cache builtin:1000 shared:SSL:10m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;
        access_log %PWD%/data/nginx/log/nginx.access.log;
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://localhost:5601;
            proxy_read_timeout 90;
            #proxy_redirect http://localhost:8080 https://jenkins.domain.com;
            proxy_redirect http://localhost:5601 https://localhost:5601;
        }
    }
}

