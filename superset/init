#!/usr/bin/env bash

pwd=`pwd`

## Set MySQL as meta datastore
__set_db_mysql() {
[ -d db ] || mkdir db

docker run --name rdb_supserset \
  -p 13306:3306 \
  -v ${pwd}/db:/var/lib/mysql \
  -e MYSQL_ROOT_PASSWORD=R0ot \
  -e MYSQL_DATABASE=superset \
  -e MYSQL_USER=superset \
  -e MYSQL_PASSWORD=superset2017 \
  --restart=unless-stopped \
  -m 1G --memory-swap -1 \
  --cpuset-cpus="0,1" \
  -d mysql:5.7 \
  --character-set-server=utf8mb4 \
  --collation-server=utf8mb4_unicode_ci
}

__set_db_postgres() {
[ -d db ] || mkdir db

docker run --name rdb_superset \
  -p 15432:5432 \
  -v ${pwd}/db:/var/lib/postgresql/data \
  -e POSTGRES_DB=superset \
  -e POSTGRES_USER=superset \
  -e POSTGRES_PASSWORD=superset2017 \
  --restart=unless-stopped \
  -m 1G --memory-swap -1 \
  --cpuset-cpus="0,1" \
  -d postgres:10.0
}

__set_db_postgres

## Document
# https://github.com/apache/incubator-superset/blob/master/docs/installation.rst

# install deps by yum
sudo yum upgrade python-setuptools
sudo yum install gcc gcc-c++ libffi-devel python-devel python-pip python-wheel openssl-devel libsasl2-devel openldap-devel mysql-devel

# install deps for MacOS
# brew install pkg-config libffi openssl python
# env LDFLAGS="-L$(brew --prefix openssl)/lib" CFLAGS="-I$(brew --prefix openssl)/include" pip install cryptography==1.7.2

# install deps for debian
# sudo apt-get install build-essential libssl-dev libffi-dev python-dev python-pip libsasl2-dev libldap2-dev

## install DB deps

# MySQL mysql://
python -m pip install -U mysqlclient
# Postgres postgresql+psycopg2://
python -m pip install -U psycopg2
# Presto presto://
python -m pip install -U pyhive
# Oracle oracle://
python -m pip install -U cx_Oracle
# Redshift postgresql+psycopg2://
python -m pip install -U sqlalchemy-redshift
# MSSQL mssql://
python -m pip install -U pymssql
# Impala impala://
python -m pip install -U impyla
# SparkSQL jdbc+hive://
python -m pip install -U pyhive
# Greenplum postgresql+psycopg2://
python -m pip install -U psycopg2
# Athena awsathena+jdbc://
python -m pip install -U "PyAthenaJDBC>1.0.9"
# Vertica vertica+vertica_python://
python -m pip install -U sqlalchemy-vertica-python
# ClickHouse clickhouse://
python -m pip install -U sqlalchemy-clickhouse
# sqlite sqlite:// installed by default

export PYTHONPATH=$PYTHONPATH:${pwd}

# Install superset, in my case anaconda env
python -m pip install -U superset

# Create an admin user (you will be prompted to set username, first and last name before setting a password)
PYTHONPATH=$PYTHONPATH:${pwd} fabmanager create-admin --app superset

# Initialize the database
PYTHONPATH=$PYTHONPATH:${pwd} superset db upgrade

# Load some data to play with
PYTHONPATH=$PYTHONPATH:${pwd} superset load_examples

# Create default roles and permissions
PYTHONPATH=$PYTHONPATH:${pwd} superset init

# Start the web server on port 8088, use -p to bind to another port
#superset runserver

[ -d log ] || mkdir log
# To start a development web server, use the -d switch
PYTHONPATH=$PYTHONPATH:${pwd} superset runserver -p 48188 -d >> log/ss.log 2>&1 &
